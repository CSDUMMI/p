#!/usr/bin/env python3

# handle https://bugs.python.org/issue22490:
import os
import sys
from subprocess import call
import hashlib

if len(sys.argv) > 1:
    # TODO: install a module, ask if we should add it to requirements.txt
    pass
else:
    if os.path.exists('requirements.txt'):
        with open('requirements.txt') as f:
            h = hashlib.sha1()
            h.update(f.read().encode())
            hash_of_requirements = h.hexdigest()

        hashes_filename = os.path.join(os.path.dirname(__file__), 'p-python-install-requirements-hashes-cache')

        hash_by_filename = {}
        if os.path.exists(hashes_filename):
            with open(hashes_filename) as f:
                hash_by_filename = dict(line.strip().rsplit(':', 1) for line in f.readlines() if line.strip())

        # if unchanged hash, exit fast
        abspath_requirements = os.path.abspath('requirements.txt')
        if hash_by_filename.get(abspath_requirements) == hash_of_requirements:
            exit(0)

        # update cache
        with open(hashes_filename, 'w') as f:
            hash_by_filename[abspath_requirements] = hash_of_requirements
            f.write('\n'.join('%s:%s' % x for x in hash_by_filename.items()))

        # install
        exit(call("unset __PYVENV_LAUNCHER__; $(p env_path)/bin/pip install -r requirements.txt -q -q", shell=True))

exit(0)
